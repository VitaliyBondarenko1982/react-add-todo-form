{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","getTodos","App","useState","setTitle","titleError","setTitleError","setUser","userError","setUserError","setTodos","titleRegex","RegExp","handleChange","e","target","value","prevValue","test","length","action","method","onSubmit","event","preventDefault","newTodoId","Math","max","newTodo","trim","htmlFor","type","placeholder","onChange","disabled","userSelect","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,uBC/CEC,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5BJ,EAAgBI,EAAhBJ,KAAME,EAAUE,EAAVF,MAEd,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCDMO,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAElCT,EAIES,EAJFT,GACAU,EAGED,EAHFC,MACAC,EAEEF,EAFFE,UACAN,EACEI,EADFJ,KAGF,OACE,0BACE,UAASL,EACTM,UAAWM,IACT,WACA,CAAE,sBAAuBD,IAJ7B,UAOE,oBAAIL,UAAU,kBAAd,SACGI,IAEFL,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QC5BlBQ,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzC,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKT,UCF1CgB,EAAU,SAACC,GAGtB,OAFkBC,EAAgBC,MAAK,SAAAd,GAAI,OAAIA,EAAKL,KAAOiB,MAEvC,MAGTG,ECbE,CACb,CACEpB,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXM,OAAQ,IDJ4BF,KAAI,SAAAN,GAAI,kCAC3CA,GAD2C,IAE9CJ,KAAMW,EAAQP,EAAKQ,aAGRI,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAAwBH,mBAAS,GAAjC,mBAAOjB,EAAP,KAAaqB,EAAb,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0BN,mBAASF,GAAnC,mBAAON,EAAP,KAAce,EAAd,KAEMC,EAAa,IAAIC,OAAO,0CAiCxBC,EAAe,SACnBC,GAEA,MAAwBA,EAAEC,OAAlBjC,EAAR,EAAQA,KAAMkC,EAAd,EAAcA,MAED,UAATlC,IACFsB,GAAS,SAAAa,GAAS,OAChBN,EAAWO,KAAKF,EAAMA,EAAMG,OAAS,IAAMH,EAAQC,KAErDX,GAAc,IAGH,SAATxB,IACFyB,GAASS,GACTP,GAAa,KAIjB,OACE,sBAAKtB,UAAU,MAAf,UACE,+CAEA,uBAAMiC,OAAO,aAAaC,OAAO,OAAOC,SArDvB,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAYC,KAAKC,IAAL,MAAAD,KAAI,YAAQ/B,EAAMC,KAAI,SAAAN,GAAI,OAAIA,EAAKT,QAAO,EAU5D,GARKK,GACHuB,GAAa,GAGVlB,GACHe,GAAc,GAGXf,GAAUL,EAAf,CAIA,IAAM0C,EAAU,CACd/C,GAAI4C,EACJjC,WAAW,EACXN,KAAMW,GAASX,GACfK,MAAOA,EAAMsC,OACb/B,QAASZ,GAGXwB,EAAS,GAAD,mBAAKf,GAAL,CAAYiC,KAEpBrB,EAAQ,GACRH,EAAS,MAyBP,UACE,sBAAKjB,UAAU,QAAf,UACE,uBAAO2C,QAAQ,aAAf,oBACA,uBACEC,KAAK,OACLjD,KAAK,QACLD,GAAG,QACH,UAAQ,aACRmD,YAAY,QACZhB,MAAOzB,EACP0C,SAAUpB,IAEXR,GAAc,sBAAMlB,UAAU,QAAhB,qCAGjB,sBAAKA,UAAU,QAAf,UACE,uBAAO2C,QAAQ,aAAf,mBACA,yBACE,UAAQ,aACRhD,KAAK,OACLD,GAAG,OACHmC,MAAO9B,EACP+C,SAAUpB,EALZ,UAOE,wBAAQG,MAAM,IAAIkB,UAAQ,EAA1B,2BACCnC,EAAgBH,KAAI,SAACuC,GAAD,OACnB,wBAA4BnB,MAAOmB,EAAWtD,GAA9C,SACGsD,EAAWrD,MADDqD,EAAWtD,UAM3B2B,GAAa,sBAAMrB,UAAU,QAAhB,qCAGhB,wBAAQ4C,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAUpC,MAAOA,QErHvByC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b0e1f819.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\n\nexport type User = {\n  id: number,\n  name: string,\n  email: string,\n};\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { UserInfo, User } from '../UserInfo';\n\nexport type Todo = {\n  id: number,\n  userId: number,\n  title: string,\n  completed: boolean,\n  user: User | null,\n};\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo, Todo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[],\n}\n\nexport const TodoList: FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const getUser = (userId: number) => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nexport const getTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [user, setUser] = useState(0);\n  const [userError, setUserError] = useState(false);\n  const [todos, setTodos] = useState(getTodos);\n\n  const titleRegex = new RegExp(/[0-9A-Za-zА-Яа-я ]/);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newTodoId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    if (!user) {\n      setUserError(true);\n    }\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!title || !user) {\n      return;\n    }\n\n    const newTodo = {\n      id: newTodoId,\n      completed: false,\n      user: getUser(+user),\n      title: title.trim(),\n      userId: +user,\n    };\n\n    setTodos([...todos, newTodo]);\n\n    setUser(0);\n    setTitle('');\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = e.target;\n\n    if (name === 'title') {\n      setTitle(prevValue => (\n        titleRegex.test(value[value.length - 1]) ? value : prevValue));\n\n      setTitleError(false);\n    }\n\n    if (name === 'user') {\n      setUser(+value);\n      setUserError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={handleChange}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User:</label>\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            id=\"user\"\n            value={user}\n            onChange={handleChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((userSelect) => (\n              <option key={userSelect.id} value={userSelect.id}>\n                {userSelect.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}